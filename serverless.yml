service: softtek-rimac-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 15
  environment:
    STAGE: ${self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    CACHE_TTL: 1800 # 30 minutes in seconds
    JWT_SECRET: ${env:JWT_SECRET, 'your-secret-key-change-in-production'}
    DB_ENGINE: ${env:DB_ENGINE, 'dynamo'}
    MYSQL_HOST: ${env:MYSQL_HOST, ''}
    MYSQL_PORT: ${env:MYSQL_PORT, '3306'}
    MYSQL_USER: ${env:MYSQL_USER, ''}
    MYSQL_PASSWORD: ${env:MYSQL_PASSWORD, ''}
    MYSQL_DATABASE: ${env:MYSQL_DATABASE, ''}
    MYSQL_TABLE: ${env:MYSQL_TABLE, 'items'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: "*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    exclude: ['aws-sdk']
    target: 'node20'
    platform: 'node'
    concurrency: 10

functions:
  api:
    handler: src/handlers/api.handler
    events:
      - http:
          path: /fusionados
          method: get
          cors: true
      - http:
          path: /almacenar
          method: post
          cors: true
      - http:
          path: /historial
          method: get
          cors: true
    tracing: Active

  authLogin:
    handler: src/handlers/auth.login
    events:
      - http:
          path: /auth/login
          method: post
          cors: true
    tracing: Active

  authRegister:
    handler: src/handlers/auth.register
    events:
      - http:
          path: /auth/register
          method: post
          cors: true
    tracing: Active

  authToken:
    handler: src/handlers/auth.generateDemoToken
    events:
      - http:
          path: /auth/token
          method: get
          cors: true
    tracing: Active

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: timestamp-index
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: type-index
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL 